package org.xtext.example.mydsl2.group16.generator;

import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;

@SuppressWarnings("all")
public class Write2File extends GeneralGenerator {
  public Write2File(final ModelPreprocessor mpp) {
    super(mpp);
  }
  
  public void generate(final IFileSystemAccess fsa) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateWrite2fileClassFileName = this.generateWrite2fileClassFileName();
    _builder.append(_generateWrite2fileClassFileName);
    fsa.generateFile(_builder.toString(), this.generateWrite2file());
  }
  
  public CharSequence generateWrite2file() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    CharSequence _generateGamePackage = this.generateGamePackage();
    _builder.append(_generateGamePackage);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.io.BufferedWriter;");
    _builder.newLine();
    _builder.append("import java.io.File;");
    _builder.newLine();
    _builder.append("import java.io.FileWriter;");
    _builder.newLine();
    _builder.append("import java.io.IOException;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class Write2file {");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static void  Write2Txt(String str,String filepath) throws Exception{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("FileWriter fw = null;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("String path = filepath;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("File f = new File(path);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if (!f.exists()) {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("f.createNewFile();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("fw = new FileWriter(f);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("BufferedWriter out = new BufferedWriter(fw);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// FileOutputStream fos = new FileOutputStream(f); ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// OutputStreamWriter out = new OutputStreamWriter(fos, \"UTF-8\"); ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("out.write(str.toString());");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("out.close();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("//System.out.println(\"===========Write To File Successful========\");");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("} catch (IOException e) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("e.printStackTrace();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("} ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static void PrintMap(int[][] map,String filepath){");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("String temp = \"\";");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("temp += \"\\t\";");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("for(int i = 0;i < map[0].length;i++)");
    _builder.newLine();
    _builder.append("    \t\t");
    _builder.append("temp += i + \"\\t\";");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("temp += \"\\n\";");
    _builder.newLine();
    _builder.append("    \t");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("for(int i = 0;i < map.length;i++)");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("{");
    _builder.newLine();
    _builder.append("    \t\t");
    _builder.append("temp += i + \"\\t\";");
    _builder.newLine();
    _builder.append("    \t\t");
    _builder.append("for(int j = 0;j <map[0].length;j++)");
    _builder.newLine();
    _builder.append("    \t\t\t");
    _builder.append("temp += map[i][j] + \"\\t\";");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("temp += \"\\n\";");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    \t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Write2Txt(temp,filepath);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} catch (Exception e) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("// TODO Auto-generated catch block");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("e.printStackTrace();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
}
