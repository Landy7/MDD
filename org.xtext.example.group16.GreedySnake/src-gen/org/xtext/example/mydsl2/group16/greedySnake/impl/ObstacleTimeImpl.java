/**
 * generated by Xtext 2.25.0.M1
 */
package org.xtext.example.mydsl2.group16.greedySnake.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl2.group16.greedySnake.GreedySnakePackage;
import org.xtext.example.mydsl2.group16.greedySnake.ObstacleTime;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Obstacle Time</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl2.group16.greedySnake.impl.ObstacleTimeImpl#getObstacleTime <em>Obstacle Time</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ObstacleTimeImpl extends TimeLimitedImpl implements ObstacleTime
{
  /**
   * The default value of the '{@link #getObstacleTime() <em>Obstacle Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObstacleTime()
   * @generated
   * @ordered
   */
  protected static final int OBSTACLE_TIME_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getObstacleTime() <em>Obstacle Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObstacleTime()
   * @generated
   * @ordered
   */
  protected int obstacleTime = OBSTACLE_TIME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ObstacleTimeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GreedySnakePackage.Literals.OBSTACLE_TIME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getObstacleTime()
  {
    return obstacleTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObstacleTime(int newObstacleTime)
  {
    int oldObstacleTime = obstacleTime;
    obstacleTime = newObstacleTime;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GreedySnakePackage.OBSTACLE_TIME__OBSTACLE_TIME, oldObstacleTime, obstacleTime));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GreedySnakePackage.OBSTACLE_TIME__OBSTACLE_TIME:
        return getObstacleTime();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GreedySnakePackage.OBSTACLE_TIME__OBSTACLE_TIME:
        setObstacleTime((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GreedySnakePackage.OBSTACLE_TIME__OBSTACLE_TIME:
        setObstacleTime(OBSTACLE_TIME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GreedySnakePackage.OBSTACLE_TIME__OBSTACLE_TIME:
        return obstacleTime != OBSTACLE_TIME_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (ObstacleTime: ");
    result.append(obstacleTime);
    result.append(')');
    return result.toString();
  }

} //ObstacleTimeImpl
