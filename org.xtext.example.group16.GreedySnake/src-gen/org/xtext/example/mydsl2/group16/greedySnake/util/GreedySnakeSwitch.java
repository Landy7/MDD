/**
 * generated by Xtext 2.25.0.M1
 */
package org.xtext.example.mydsl2.group16.greedySnake.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.mydsl2.group16.greedySnake.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl2.group16.greedySnake.GreedySnakePackage
 * @generated
 */
public class GreedySnakeSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static GreedySnakePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GreedySnakeSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = GreedySnakePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case GreedySnakePackage.GREEDY_SNAKE:
      {
        GreedySnake greedySnake = (GreedySnake)theEObject;
        T result = caseGreedySnake(greedySnake);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.GLOBAL_MAP:
      {
        GlobalMap globalMap = (GlobalMap)theEObject;
        T result = caseGlobalMap(globalMap);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.GLOBAL_FIELD_INITIALISATION:
      {
        GlobalFieldInitialisation globalFieldInitialisation = (GlobalFieldInitialisation)theEObject;
        T result = caseGlobalFieldInitialisation(globalFieldInitialisation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.INITIAL_FIELD:
      {
        InitialField initialField = (InitialField)theEObject;
        T result = caseInitialField(initialField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.DEFAULT:
      {
        Default default_ = (Default)theEObject;
        T result = caseDefault(default_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.INITIAL_SNAKE_SPECIFICATIN:
      {
        InitialSnakeSpecificatin initialSnakeSpecificatin = (InitialSnakeSpecificatin)theEObject;
        T result = caseInitialSnakeSpecificatin(initialSnakeSpecificatin);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.INITIAL_FOOD_SPECIFICATIN:
      {
        InitialFoodSpecificatin initialFoodSpecificatin = (InitialFoodSpecificatin)theEObject;
        T result = caseInitialFoodSpecificatin(initialFoodSpecificatin);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.INITIAL_OBSTACLE_SPECIFICATIN:
      {
        InitialObstacleSpecificatin initialObstacleSpecificatin = (InitialObstacleSpecificatin)theEObject;
        T result = caseInitialObstacleSpecificatin(initialObstacleSpecificatin);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.INITIAL_FIRE_SPECIFICATION:
      {
        InitialFireSpecification initialFireSpecification = (InitialFireSpecification)theEObject;
        T result = caseInitialFireSpecification(initialFireSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.INITIAL_SPEED_SPECIFICATION:
      {
        InitialSpeedSpecification initialSpeedSpecification = (InitialSpeedSpecification)theEObject;
        T result = caseInitialSpeedSpecification(initialSpeedSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.SPEED_GROUP:
      {
        SpeedGroup speedGroup = (SpeedGroup)theEObject;
        T result = caseSpeedGroup(speedGroup);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.FIRE_MEMBERS:
      {
        FireMembers fireMembers = (FireMembers)theEObject;
        T result = caseFireMembers(fireMembers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.SNAKE_MEMBERS:
      {
        SnakeMembers snakeMembers = (SnakeMembers)theEObject;
        T result = caseSnakeMembers(snakeMembers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.FOOD_MEMBERS:
      {
        FoodMembers foodMembers = (FoodMembers)theEObject;
        T result = caseFoodMembers(foodMembers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.OBSTACLE_MEMBERS:
      {
        ObstacleMembers obstacleMembers = (ObstacleMembers)theEObject;
        T result = caseObstacleMembers(obstacleMembers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.SNAKE_MOVE_SPECIFICATION:
      {
        SnakeMoveSpecification snakeMoveSpecification = (SnakeMoveSpecification)theEObject;
        T result = caseSnakeMoveSpecification(snakeMoveSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.MOVE:
      {
        Move move = (Move)theEObject;
        T result = caseMove(move);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.FIRE_INIT_DISPLAY:
      {
        FireInitDisplay fireInitDisplay = (FireInitDisplay)theEObject;
        T result = caseFireInitDisplay(fireInitDisplay);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.SNAKE_INIT_DISPLAY:
      {
        SnakeInitDisplay snakeInitDisplay = (SnakeInitDisplay)theEObject;
        T result = caseSnakeInitDisplay(snakeInitDisplay);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.ICON:
      {
        Icon icon = (Icon)theEObject;
        T result = caseIcon(icon);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.ICON_TAG:
      {
        IconTag iconTag = (IconTag)theEObject;
        T result = caseIconTag(iconTag);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.FOOD_INIT_DISPLAY:
      {
        FoodInitDisplay foodInitDisplay = (FoodInitDisplay)theEObject;
        T result = caseFoodInitDisplay(foodInitDisplay);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.FOOD_KIND:
      {
        FoodKind foodKind = (FoodKind)theEObject;
        T result = caseFoodKind(foodKind);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.OBSTACLE_INIT_DISPLAY:
      {
        ObstacleInitDisplay obstacleInitDisplay = (ObstacleInitDisplay)theEObject;
        T result = caseObstacleInitDisplay(obstacleInitDisplay);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.RANDOM_FOOD_SIZE:
      {
        RandomFoodSize randomFoodSize = (RandomFoodSize)theEObject;
        T result = caseRandomFoodSize(randomFoodSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.TIME_LIMITED:
      {
        TimeLimited timeLimited = (TimeLimited)theEObject;
        T result = caseTimeLimited(timeLimited);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.OBSTACLE_TIME:
      {
        ObstacleTime obstacleTime = (ObstacleTime)theEObject;
        T result = caseObstacleTime(obstacleTime);
        if (result == null) result = caseTimeLimited(obstacleTime);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.FOOD_TIME:
      {
        FoodTime foodTime = (FoodTime)theEObject;
        T result = caseFoodTime(foodTime);
        if (result == null) result = caseTimeLimited(foodTime);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.DIRECTION_SPECIFICATION:
      {
        DirectionSpecification directionSpecification = (DirectionSpecification)theEObject;
        T result = caseDirectionSpecification(directionSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.DIS:
      {
        dis dis = (dis)theEObject;
        T result = casedis(dis);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.EXPRESSION:
      {
        Expression expression = (Expression)theEObject;
        T result = caseExpression(expression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.INT_LITERAL:
      {
        IntLiteral intLiteral = (IntLiteral)theEObject;
        T result = caseIntLiteral(intLiteral);
        if (result == null) result = caseExpression(intLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.REAL_LITERAL:
      {
        RealLiteral realLiteral = (RealLiteral)theEObject;
        T result = caseRealLiteral(realLiteral);
        if (result == null) result = caseExpression(realLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.OPTION_SPECIFICATION:
      {
        OptionSpecification optionSpecification = (OptionSpecification)theEObject;
        T result = caseOptionSpecification(optionSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.RESTART_MENU:
      {
        RestartMenu restartMenu = (RestartMenu)theEObject;
        T result = caseRestartMenu(restartMenu);
        if (result == null) result = caseOptionSpecification(restartMenu);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.START_FIELD_DECLARATION:
      {
        StartFieldDeclaration startFieldDeclaration = (StartFieldDeclaration)theEObject;
        T result = caseStartFieldDeclaration(startFieldDeclaration);
        if (result == null) result = caseOptionSpecification(startFieldDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.ABOUT_SPECIFICATION:
      {
        AboutSpecification aboutSpecification = (AboutSpecification)theEObject;
        T result = caseAboutSpecification(aboutSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.HELP_SPECIFICATION:
      {
        HelpSpecification helpSpecification = (HelpSpecification)theEObject;
        T result = caseHelpSpecification(helpSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.BACK_SPECIFICATION:
      {
        BackSpecification backSpecification = (BackSpecification)theEObject;
        T result = caseBackSpecification(backSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.BACKGROUND_ICON:
      {
        BackgroundIcon backgroundIcon = (BackgroundIcon)theEObject;
        T result = caseBackgroundIcon(backgroundIcon);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.BACK_GROUND_SIZE:
      {
        BackGroundSize backGroundSize = (BackGroundSize)theEObject;
        T result = caseBackGroundSize(backGroundSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.BACKGROUND_TAG:
      {
        BackgroundTag backgroundTag = (BackgroundTag)theEObject;
        T result = caseBackgroundTag(backgroundTag);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.BACKGROUND_TAG_LOCATE:
      {
        BackgroundTagLocate backgroundTagLocate = (BackgroundTagLocate)theEObject;
        T result = caseBackgroundTagLocate(backgroundTagLocate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.MUSIC_SPECIFICATION:
      {
        MusicSpecification musicSpecification = (MusicSpecification)theEObject;
        T result = caseMusicSpecification(musicSpecification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.MUSIC_PATH:
      {
        MusicPath musicPath = (MusicPath)theEObject;
        T result = caseMusicPath(musicPath);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.STRING_VAL:
      {
        StringVal stringVal = (StringVal)theEObject;
        T result = caseStringVal(stringVal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.ADDITION:
      {
        Addition addition = (Addition)theEObject;
        T result = caseAddition(addition);
        if (result == null) result = caseExpression(addition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GreedySnakePackage.MULTIPLICATION:
      {
        Multiplication multiplication = (Multiplication)theEObject;
        T result = caseMultiplication(multiplication);
        if (result == null) result = caseExpression(multiplication);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Greedy Snake</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Greedy Snake</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGreedySnake(GreedySnake object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Map</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Map</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalMap(GlobalMap object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Field Initialisation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Field Initialisation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalFieldInitialisation(GlobalFieldInitialisation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitialField(InitialField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Default</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Default</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefault(Default object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial Snake Specificatin</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial Snake Specificatin</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitialSnakeSpecificatin(InitialSnakeSpecificatin object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial Food Specificatin</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial Food Specificatin</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitialFoodSpecificatin(InitialFoodSpecificatin object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial Obstacle Specificatin</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial Obstacle Specificatin</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitialObstacleSpecificatin(InitialObstacleSpecificatin object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial Fire Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial Fire Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitialFireSpecification(InitialFireSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial Speed Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial Speed Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitialSpeedSpecification(InitialSpeedSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Speed Group</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Speed Group</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSpeedGroup(SpeedGroup object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fire Members</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fire Members</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFireMembers(FireMembers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Snake Members</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Snake Members</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSnakeMembers(SnakeMembers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Food Members</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Food Members</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoodMembers(FoodMembers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Obstacle Members</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Obstacle Members</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObstacleMembers(ObstacleMembers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Snake Move Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Snake Move Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSnakeMoveSpecification(SnakeMoveSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMove(Move object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fire Init Display</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fire Init Display</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFireInitDisplay(FireInitDisplay object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Snake Init Display</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Snake Init Display</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSnakeInitDisplay(SnakeInitDisplay object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Icon</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Icon</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIcon(Icon object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Icon Tag</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Icon Tag</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIconTag(IconTag object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Food Init Display</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Food Init Display</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoodInitDisplay(FoodInitDisplay object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Food Kind</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Food Kind</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoodKind(FoodKind object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Obstacle Init Display</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Obstacle Init Display</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObstacleInitDisplay(ObstacleInitDisplay object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Random Food Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Random Food Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRandomFoodSize(RandomFoodSize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Time Limited</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Time Limited</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTimeLimited(TimeLimited object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Obstacle Time</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Obstacle Time</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObstacleTime(ObstacleTime object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Food Time</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Food Time</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoodTime(FoodTime object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Direction Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Direction Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDirectionSpecification(DirectionSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>dis</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>dis</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casedis(dis object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpression(Expression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Int Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Int Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntLiteral(IntLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Real Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Real Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRealLiteral(RealLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Option Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Option Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOptionSpecification(OptionSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Restart Menu</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Restart Menu</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRestartMenu(RestartMenu object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Start Field Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Start Field Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStartFieldDeclaration(StartFieldDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>About Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>About Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAboutSpecification(AboutSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Help Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Help Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHelpSpecification(HelpSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Back Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Back Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBackSpecification(BackSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Background Icon</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Background Icon</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBackgroundIcon(BackgroundIcon object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Back Ground Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Back Ground Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBackGroundSize(BackGroundSize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Background Tag</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Background Tag</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBackgroundTag(BackgroundTag object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Background Tag Locate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Background Tag Locate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBackgroundTagLocate(BackgroundTagLocate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Music Specification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Music Specification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMusicSpecification(MusicSpecification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Music Path</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Music Path</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMusicPath(MusicPath object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Val</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Val</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringVal(StringVal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Addition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Addition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAddition(Addition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multiplication</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multiplication</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiplication(Multiplication object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //GreedySnakeSwitch
