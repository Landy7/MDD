/**
 * generated by Xtext 2.25.0.M1
 */
package org.xtext.example.mydsl2.group16.greedySnake.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl2.group16.greedySnake.BackgroundTag;
import org.xtext.example.mydsl2.group16.greedySnake.GreedySnakePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Background Tag</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl2.group16.greedySnake.impl.BackgroundTagImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl2.group16.greedySnake.impl.BackgroundTagImpl#getValue <em>Value</em>}</li>
 *   <li>{@link org.xtext.example.mydsl2.group16.greedySnake.impl.BackgroundTagImpl#getBKtag <em>BKtag</em>}</li>
 *   <li>{@link org.xtext.example.mydsl2.group16.greedySnake.impl.BackgroundTagImpl#getLocate <em>Locate</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BackgroundTagImpl extends MinimalEObjectImpl.Container implements BackgroundTag
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getBKtag() <em>BKtag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBKtag()
   * @generated
   * @ordered
   */
  protected static final int BKTAG_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getBKtag() <em>BKtag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBKtag()
   * @generated
   * @ordered
   */
  protected int bKtag = BKTAG_EDEFAULT;

  /**
   * The default value of the '{@link #getLocate() <em>Locate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocate()
   * @generated
   * @ordered
   */
  protected static final String LOCATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLocate() <em>Locate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocate()
   * @generated
   * @ordered
   */
  protected String locate = LOCATE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BackgroundTagImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GreedySnakePackage.Literals.BACKGROUND_TAG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GreedySnakePackage.BACKGROUND_TAG__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GreedySnakePackage.BACKGROUND_TAG__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getBKtag()
  {
    return bKtag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBKtag(int newBKtag)
  {
    int oldBKtag = bKtag;
    bKtag = newBKtag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GreedySnakePackage.BACKGROUND_TAG__BKTAG, oldBKtag, bKtag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLocate()
  {
    return locate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocate(String newLocate)
  {
    String oldLocate = locate;
    locate = newLocate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GreedySnakePackage.BACKGROUND_TAG__LOCATE, oldLocate, locate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GreedySnakePackage.BACKGROUND_TAG__NAME:
        return getName();
      case GreedySnakePackage.BACKGROUND_TAG__VALUE:
        return getValue();
      case GreedySnakePackage.BACKGROUND_TAG__BKTAG:
        return getBKtag();
      case GreedySnakePackage.BACKGROUND_TAG__LOCATE:
        return getLocate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GreedySnakePackage.BACKGROUND_TAG__NAME:
        setName((String)newValue);
        return;
      case GreedySnakePackage.BACKGROUND_TAG__VALUE:
        setValue((String)newValue);
        return;
      case GreedySnakePackage.BACKGROUND_TAG__BKTAG:
        setBKtag((Integer)newValue);
        return;
      case GreedySnakePackage.BACKGROUND_TAG__LOCATE:
        setLocate((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GreedySnakePackage.BACKGROUND_TAG__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GreedySnakePackage.BACKGROUND_TAG__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
      case GreedySnakePackage.BACKGROUND_TAG__BKTAG:
        setBKtag(BKTAG_EDEFAULT);
        return;
      case GreedySnakePackage.BACKGROUND_TAG__LOCATE:
        setLocate(LOCATE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GreedySnakePackage.BACKGROUND_TAG__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GreedySnakePackage.BACKGROUND_TAG__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
      case GreedySnakePackage.BACKGROUND_TAG__BKTAG:
        return bKtag != BKTAG_EDEFAULT;
      case GreedySnakePackage.BACKGROUND_TAG__LOCATE:
        return LOCATE_EDEFAULT == null ? locate != null : !LOCATE_EDEFAULT.equals(locate);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", value: ");
    result.append(value);
    result.append(", BKtag: ");
    result.append(bKtag);
    result.append(", locate: ");
    result.append(locate);
    result.append(')');
    return result.toString();
  }

} //BackgroundTagImpl
