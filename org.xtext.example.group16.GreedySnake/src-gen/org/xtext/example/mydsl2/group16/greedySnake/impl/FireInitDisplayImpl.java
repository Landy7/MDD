/**
 * generated by Xtext 2.25.0.M1
 */
package org.xtext.example.mydsl2.group16.greedySnake.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl2.group16.greedySnake.FireInitDisplay;
import org.xtext.example.mydsl2.group16.greedySnake.GreedySnakePackage;
import org.xtext.example.mydsl2.group16.greedySnake.IconTag;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fire Init Display</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl2.group16.greedySnake.impl.FireInitDisplayImpl#getFireIcon <em>Fire Icon</em>}</li>
 *   <li>{@link org.xtext.example.mydsl2.group16.greedySnake.impl.FireInitDisplayImpl#getIconsize <em>Iconsize</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FireInitDisplayImpl extends MinimalEObjectImpl.Container implements FireInitDisplay
{
  /**
   * The cached value of the '{@link #getFireIcon() <em>Fire Icon</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFireIcon()
   * @generated
   * @ordered
   */
  protected EList<IconTag> fireIcon;

  /**
   * The default value of the '{@link #getIconsize() <em>Iconsize</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIconsize()
   * @generated
   * @ordered
   */
  protected static final String ICONSIZE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIconsize() <em>Iconsize</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIconsize()
   * @generated
   * @ordered
   */
  protected String iconsize = ICONSIZE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FireInitDisplayImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GreedySnakePackage.Literals.FIRE_INIT_DISPLAY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IconTag> getFireIcon()
  {
    if (fireIcon == null)
    {
      fireIcon = new EObjectContainmentEList<IconTag>(IconTag.class, this, GreedySnakePackage.FIRE_INIT_DISPLAY__FIRE_ICON);
    }
    return fireIcon;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIconsize()
  {
    return iconsize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIconsize(String newIconsize)
  {
    String oldIconsize = iconsize;
    iconsize = newIconsize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GreedySnakePackage.FIRE_INIT_DISPLAY__ICONSIZE, oldIconsize, iconsize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GreedySnakePackage.FIRE_INIT_DISPLAY__FIRE_ICON:
        return ((InternalEList<?>)getFireIcon()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GreedySnakePackage.FIRE_INIT_DISPLAY__FIRE_ICON:
        return getFireIcon();
      case GreedySnakePackage.FIRE_INIT_DISPLAY__ICONSIZE:
        return getIconsize();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GreedySnakePackage.FIRE_INIT_DISPLAY__FIRE_ICON:
        getFireIcon().clear();
        getFireIcon().addAll((Collection<? extends IconTag>)newValue);
        return;
      case GreedySnakePackage.FIRE_INIT_DISPLAY__ICONSIZE:
        setIconsize((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GreedySnakePackage.FIRE_INIT_DISPLAY__FIRE_ICON:
        getFireIcon().clear();
        return;
      case GreedySnakePackage.FIRE_INIT_DISPLAY__ICONSIZE:
        setIconsize(ICONSIZE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GreedySnakePackage.FIRE_INIT_DISPLAY__FIRE_ICON:
        return fireIcon != null && !fireIcon.isEmpty();
      case GreedySnakePackage.FIRE_INIT_DISPLAY__ICONSIZE:
        return ICONSIZE_EDEFAULT == null ? iconsize != null : !ICONSIZE_EDEFAULT.equals(iconsize);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Iconsize: ");
    result.append(iconsize);
    result.append(')');
    return result.toString();
  }

} //FireInitDisplayImpl
