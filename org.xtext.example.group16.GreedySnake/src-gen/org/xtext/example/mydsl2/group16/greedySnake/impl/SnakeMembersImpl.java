/**
 * generated by Xtext 2.25.0.M1
 */
package org.xtext.example.mydsl2.group16.greedySnake.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl2.group16.greedySnake.GreedySnakePackage;
import org.xtext.example.mydsl2.group16.greedySnake.SnakeInitDisplay;
import org.xtext.example.mydsl2.group16.greedySnake.SnakeMembers;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Snake Members</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl2.group16.greedySnake.impl.SnakeMembersImpl#getSna <em>Sna</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SnakeMembersImpl extends MinimalEObjectImpl.Container implements SnakeMembers
{
  /**
   * The cached value of the '{@link #getSna() <em>Sna</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSna()
   * @generated
   * @ordered
   */
  protected SnakeInitDisplay sna;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SnakeMembersImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GreedySnakePackage.Literals.SNAKE_MEMBERS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SnakeInitDisplay getSna()
  {
    return sna;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSna(SnakeInitDisplay newSna, NotificationChain msgs)
  {
    SnakeInitDisplay oldSna = sna;
    sna = newSna;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GreedySnakePackage.SNAKE_MEMBERS__SNA, oldSna, newSna);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSna(SnakeInitDisplay newSna)
  {
    if (newSna != sna)
    {
      NotificationChain msgs = null;
      if (sna != null)
        msgs = ((InternalEObject)sna).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GreedySnakePackage.SNAKE_MEMBERS__SNA, null, msgs);
      if (newSna != null)
        msgs = ((InternalEObject)newSna).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GreedySnakePackage.SNAKE_MEMBERS__SNA, null, msgs);
      msgs = basicSetSna(newSna, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GreedySnakePackage.SNAKE_MEMBERS__SNA, newSna, newSna));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GreedySnakePackage.SNAKE_MEMBERS__SNA:
        return basicSetSna(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GreedySnakePackage.SNAKE_MEMBERS__SNA:
        return getSna();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GreedySnakePackage.SNAKE_MEMBERS__SNA:
        setSna((SnakeInitDisplay)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GreedySnakePackage.SNAKE_MEMBERS__SNA:
        setSna((SnakeInitDisplay)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GreedySnakePackage.SNAKE_MEMBERS__SNA:
        return sna != null;
    }
    return super.eIsSet(featureID);
  }

} //SnakeMembersImpl
