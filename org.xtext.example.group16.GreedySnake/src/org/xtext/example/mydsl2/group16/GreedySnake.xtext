grammar org.xtext.example.mydsl2.group16.GreedySnake with org.eclipse.xtext.common.Terminals

generate greedySnake "http://www.xtext.org/example/mydsl2/Group16/GreedySnake"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


GreedySnake:
	"game" name=ID "{"
		(snakes += InitialSnakeSpecificatin|
		 foods += InitialFoodSpecificatin|
		 obstacles += InitialObstacleSpecificatin|
		 speed += InitialSpeedSpecification |
		 fire += InitialFireSpecification |
		 time += TimeLimited|
		 Map += GlobalMap |
		 SnakeMove += SnakeMoveSpecification |
		 about += AboutSpecification |
		 directions += DirectionSpecification |
		 Help += HelpSpecification |
		 Music += MusicSpecification |
		 Backgrounds += BackSpecification|
		 fields += GlobalFieldInitialisation |
		 options += OptionSpecification)+	
	"}"
;


//map的filePath
GlobalMap:
 	"Filepath" "=" map=STRING
;


GlobalFieldInitialisation:
	"field" name = ID "{"
		//the width of panel
		"Panel_width" "=" panelWidth=INT //900
		//the height of panel
		"Panel_Height" "=" panelHeight=INT //480
		"column" "=" width=INT //40
		"row" "=" height=INT //21
		"label_width" "=" labelWidth=INT //1000
		"label_Height" "=" labelHeight=INT //540
		field_initialisation = InitialField
	"}"
;

InitialField:
	"init" name=ID "(" ")" "{"
			"Default" ":" Default=Default
	"}"
;

Default:
	"snakeLength" "=" length=STRING //"1" 
	"Score" "=" score=STRING //""
	"Time" "=" time=STRING// ""
	"Amount" "=" amount=STRING //"0"
	"Weapon" "=" weapon=STRING //"20"
;

InitialSnakeSpecificatin:
	
	"snake" name=ID "{"
			members = SnakeMembers
	"}" (Multiples += [InitialSnakeSpecificatin])?
;
InitialFoodSpecificatin:
	"food" name=ID "{"
			members = FoodMembers
	"}" (Multiples += [InitialFoodSpecificatin])?
;
InitialObstacleSpecificatin:
	"obstacle" name=ID "{"
			members = ObstacleMembers
	"}" (Multiples += [InitialObstacleSpecificatin])?
;
InitialFireSpecification:
	"fire" name=ID "{"
			members = FireMembers
	"}" (Multiples += [InitialSnakeSpecificatin])?
;

InitialSpeedSpecification:
	{InitialSpeedSpecification} "Speed" "{"
			speedGroup += SpeedGroup*
	"}" 
;

SpeedGroup:
	name=ID "=" value=INT
;

FireMembers:
	fire = FireInitDisplay 
;

SnakeMembers:
	sna = SnakeInitDisplay 
;

FoodMembers:
	food = FoodInitDisplay 
;

ObstacleMembers:
	obstacle = ObstacleInitDisplay 
;

SnakeMoveSpecification:
	{SnakeMoveSpecification} "snake" "move" "{"
	IF += Move*
	"}"
;

Move:
	"if" "(" "direction" "=" dir = [dis] ")"
	 name=ID"."coor=("x"|"y") operator=("+"|"-") moveVal = INT
	
;

FireInitDisplay:
	"FireIcon" "{" FireIcon += IconTag* "}"
	"Icon_size" "=" Iconsize=IconSize //20
;


SnakeInitDisplay:
	"head" "=" head = "("initial_x = INT "," initial_y = INT ")" //(0,0)
	"headIcon" "{" headIcon += IconTag* "}"
	"Icon_size" "=" Iconsize=IconSize //20
	"BodyIcon" "{" BodyIcon += IconTag* "}"
	"defaultSpeed" "=" defaultSpeed = INT 
	"snakeTag" "=" snakeTag=INT //1
;


Icon:
  {Icon} IconTag += IconTag*
;

IconSize:
	INT
;

IconTag:
	 name=ID value=STRING "=" tag=INT
	 "Locate" ":" Locate=STRING//图像地址
;



FoodInitDisplay:
	"foodIcon" "{" foodIcon += IconTag* "}" 
	"Icon_size" "=" Iconsize=IconSize //20
	"foodKind" "{" foodKind += FoodKind* "}" 
	"randomFoodSize" produce = RandomFoodSize 
	"foodTag" "=" foodTag=INT //2
;


//kind1 = 0 : point = 50
FoodKind:
	kind=[IconTag] ":" "point" "=" point=Addition 
;


//locate
ObstacleInitDisplay:
	"ObstacleIcon" "{" ObstacleIcon += IconTag* "}"
	"Icon_size" "=" Iconsize=IconSize
	"ObstacleTag" "=" ObstacleTag=INT //3
;

RandomFoodSize:
	"Maxsize" maxsize = INT
	"Minsize" minsize = INT
;

//time limited
TimeLimited:
	"timeLimited" "{"
	FoodTime | ObstacleTime
	"}"
;

ObstacleTime:
	name=ID "=" ObstacleTime=INT
;

FoodTime:
	name=ID "=" FoodTime=INT
;

DirectionSpecification:
	{DirectionSpecification} "Direction" "{"
	 di += dis*
	"}"
;

dis:
	name=ID "=" direction=Direction
;

enum Direction:
	LEFT | RIGHT | UP |DOWN
;



Addition returns Expression:
	Multiplication ({Addition.left = current} operator+=("+"|"-") right+=Multiplication)*
;

Multiplication returns Expression:
	Primary ({Multiplication.left = current} operator+=("*"|"/") right+=Primary)*
;

Primary returns Expression:
	IntLiteral |
	RealLiteral |
	"(" Addition ")"
;

IntLiteral:
	val = INT
;

RealLiteral:
	val = REAL
;

REAL returns ecore::EFloat hidden():
	INT? "." INT
; 



OptionSpecification:
	StartFieldDeclaration | 
	RestartMenu  
;


RestartMenu:
	"restartGame" {RestartMenu}
;

StartFieldDeclaration:
	"start" "=" field = [GlobalFieldInitialisation]
;

AboutSpecification:
	"about" name=ID "{"
	"Title" ":" AboutTitle=STRING //TitlePath
	"Information" ":" AboutInfor=STRING //information
	"Label_size" ":" "("x = INT","y = INT")" // x = 410, y = 380
	"}"
;


HelpSpecification:
	"help" name=ID "{"
	"Title" ":" HelpTitle=STRING //TitlePath
	"Information" ":" HelpInfor=STRING //information
	"Label_size" ":" "("x = INT","y = INT")" //x = 410, y = 380
	"}"
;

BackSpecification:
	"backGround" "{"
	"Icon" "{" BackgroundIcon = BackgroundIcon "}" //the detail of background
	"Height" "=" BackGroundHeight=INT //height
	"Width" "=" BackGroundWidth=INT //width
	"}"
;


BackgroundIcon:
  {BackgroundIcon} BackgroundTag += BackgroundTag*
;

BackGroundSize:
	val = INT
;
//example: tag1 "xixi" = 1
BackgroundTag:
	 name=ID value=STRING "=" BKtag=INT
	 "Locate" ":" locate=STRING //filepath
;

//locate locateTag1 = "..//.."
BackgroundTagLocate:
	"Locate" name=ID "=" value=STRING
;

MusicSpecification: 
	 "Music" "{" 
	 "BufferSize" "=" buffersize = INT
	  MusicPath += MusicPath* 
	  "}"
;

MusicPath:
	name=ID  "path" "=" path=STRING
;


StringVal:
	value=STRING
;
	

